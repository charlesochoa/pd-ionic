{"version":3,"sources":["webpack:///src/app/modules/login/login.page.scss","webpack:///src/app/modules/login/login.module.ts","webpack:///src/app/modules/login/login.page.html","webpack:///src/app/modules/login/login.page.ts"],"names":["LoginPageModule","imports","forChild","path","component","declarations","LoginPage","router","authService","alertController","checkoutService","toastController","email","create","cssClass","header","message","buttons","text","role","handler","blah","console","log","login","subscribe","u","newCart","pk","c","cartPk","setLocalUser","then","r","navigate","err","error","user","username","duration","color","position","toast","present","alert","selector","template"],"mappings":"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","file":"modules-login-login-module-es5.js","sourcesContent":["export default \"ion-header ion-toolbar {\\n  --background: var(--ion-color-danger);\\n}\\n\\n.my-custom-class {\\n  --white-space: 70px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxsb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUU7RUFDRSxxQ0FBQTtBQURKOztBQU1BO0VBQ0UsbUJBQUE7QUFIRiIsImZpbGUiOiJsb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW9uLWhlYWRlciB7XHJcbiAgaW9uLXRvb2xiYXIge1xyXG4gICAgLS1iYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4ubXktY3VzdG9tLWNsYXNzIHtcclxuICAtLXdoaXRlLXNwYWNlOiA3MHB4O1xyXG59XHJcbiJdfQ== */\";","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { LoginPage } from './login.page';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: LoginPage }])\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"<ion-header background=\\\"danger\\\">\\n  <ion-toolbar>\\n      <ion-title slot=\\\"start\\\">\\n        <img\\n            src=\\\"../../../assets/images/icon.jpg\\\" height=\\\"40px\\\"\\n          />\\n      </ion-title>\\n    <ion-title slot=\\\"start\\\">\\n        <img\\n            src=\\\"../../../assets/images/letters.png\\\" height=\\\"20px\\\"\\n          />\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content >\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"register()\\\">\\n    <ion-grid>\\n      <ion-row justify-content-center>\\n        <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n          <div text-center>\\n            <h3>El siguiente correo electrónico tendrá uso exclusivo para el estudio. Una vez terminado el mismo, se eliminarán de la base de datos.</h3>\\n          </div>\\n          <div padding>\\n            <ion-item>\\n              <ion-input name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"your@email.com\\\" [(ngModel)]=\\\"email\\\" required></ion-input>\\n            </ion-item>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n<ion-footer>\\n  <div padding>\\n    <ion-button  size=\\\"large\\\" (click)=\\\"register()\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\" >¡Empezar!</ion-button>\\n  </div>\\n</ion-footer>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { AuthService } from './auth.service';\nimport { CheckoutService } from '../checkout/checkout.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: 'login.page.html',\n  styleUrls: ['login.page.scss']\n})\nexport class LoginPage {\n  email: string = '';\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private alertController: AlertController,\n    private checkoutService: CheckoutService,\n    public toastController: ToastController,\n    ) {}\n\n\n  async register() {\n    // console.log('Device Model0: ' + this.device);\n    // console.log('Device Model1: ' + this.device.cordova);\n    // console.log('Device Model2: ' + this.device.isVirtual);\n    // console.log('Device Model3: ' + this.device.manufacturer);\n    // console.log('Device Model4: ' + this.device.model);\n    // console.log('Device Model5: ' + this.device.platform);\n    // console.log('Device Model6: ' + this.device.serial);\n    // console.log('Device Model7: ' + this.device.uuid);\n    // console.log('Device Model8: ' + this.device.version);\n\n      const alert = await this.alertController.create({\n        cssClass: 'my-custom-class',\n        header: 'Bienvenido!',\n        message: '- Realiza una compra para ti y tus amigos -No tienes limites de tiempo, ni dinero.\\n-La prueba finaliza al ir al carrito y finalizar el pedido.\\n\\nNo requiere datos personales ni de pago es un prototipo.',\n        buttons: [\n          {\n            text: 'Cancelar',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: (blah) => {\n              console.log('Confirm Cancel: blah');\n            }\n          }, {\n            text: 'Vamos!',\n            handler: () => {\n              console.log('Confirm Okay');\n              this.authService.login(this.email).subscribe(async (u: any) => {\n                this.checkoutService.newCart(u.pk).subscribe(c => {\n                  u.cartPk = c.pk\n                  this.authService.setLocalUser(u).then( async r => {\n                    this.router.navigate(['tabs','menu']);\n                  })\n                });\n              }, async err => {\n                if( err && err.error && err.error.user && err.error.user.username) {\n                  const toast = await this.toastController.create({\n                    message: 'Parece que has realizado ya esta prueba! Si aún no has hecho la encuesta de invitamos a revisar el correo que te hemos enviado para completarla.',\n                    duration: 6500,\n                    color: 'success',\n                    position: 'middle'\n                  });\n                  toast.present();\n                }\n              });\n            }\n          }\n        ]\n      });\n\n      alert.present();\n\n  }\n\n}\n"]}